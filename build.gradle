group 'org.mkscc.igo.pi'
version '1.1-SNAPSHOT'

apply plugin: 'java'
apply plugin: 'application'
apply plugin: 'idea'
apply plugin: 'maven'
apply plugin: 'org.springframework.boot'

mainClassName = "org.mkscc.igo.pi.dmptoigo.Application"

sourceCompatibility = 1.8

ext.springVersion='1.5.9.RELEASE'

buildscript {
    def springVersion='1.5.9.RELEASE'

    repositories {
        mavenCentral()
    }
    dependencies {
        classpath group: 'org.springframework.boot', name: 'spring-boot-gradle-plugin', version: springVersion
    }
}

repositories {
    mavenCentral()
    mavenLocal()
    maven { url "${nexusUrlReleases}" }
    maven { url "${nexusUrlSnapshots}" }
}

configurations {
    all*.exclude module : 'spring-boot-starter-logging'
}

configurations.all {
    resolutionStrategy.cacheChangingModulesFor 0, 'seconds'
}

dependencies {
    compile group: 'org.mskcc.common', name:'common-domain', version: '2.4.0'
    compile group: 'com.opencsv', name: 'opencsv', version: '4.1'

    compile ('javax.servlet:javax.servlet-api')

    compile ('org.springframework.boot:spring-boot')
    compile ('org.springframework.boot:spring-boot-autoconfigure')
    compile('org.springframework.boot:spring-boot-starter-mail')

    compile('org.springframework.boot:spring-boot-starter-web') {
        exclude group: 'org.springframework.boot', module: 'spring-boot-starter-logging'
    }

    compile ('org.springframework.boot:spring-boot-starter-log4j2')

    compile group: 'org.apache.httpcomponents', name: 'httpclient', version: '4.5'

    testCompile ('org.springframework.boot:spring-boot-starter-test')
    testCompile 'org.assertj:assertj-core:3.9.0'
}

bootRun {
    if (System.getProperty('DEBUG', 'false') == 'true') {
        jvmArgs '-agentlib:jdwp=transport=dt_socket,server=y,suspend=y,address=5005'
    }

    systemProperties = System.properties

}

run {
    systemProperties = System.properties
}

springBoot {
    executable = true
}

jar {
    baseName = 'dmp-to-igo'
}

sourceSets {
    integrationTest {
        java {
            compileClasspath += main.output + test.output
            runtimeClasspath += main.output + test.output
            srcDir file('src/integration-test/java')
        }
        resources.srcDir file('src/integration-test/resources')
        compileClasspath += sourceSets.main.runtimeClasspath + sourceSets.test.runtimeClasspath
    }
}

configurations {
    integrationTestCompile.extendsFrom compile
    integrationTestRuntime.extendsFrom runtime
}

task integrationTest(type: Test) {
    if (System.getProperty('DEBUG', 'false') == 'true')
        jvmArgs '-agentlib:jdwp=transport=dt_socket,server=y,suspend=y,address=5008'

    systemProperties System.properties
    testClassesDir = sourceSets.integrationTest.output.classesDir
    classpath = sourceSets.integrationTest.runtimeClasspath
    description = "Integration Tests"
    outputs.upToDateWhen { false }
    environment SPRING_PROFILES_ACTIVE: environment.SPRING_PROFILES_ACTIVE ?: "dev"
}

uploadArchives {
    repositories {
        mavenDeployer {
            repository(
                    url: "${nexusUrlReleases}") {
                authentication(userName: nexusUsername, password: nexusPassword)
            }
            snapshotRepository(
                    url: "${nexusUrlSnapshots}") {
                authentication(userName: nexusUsername, password: nexusPassword)
            }
        }
    }
}
